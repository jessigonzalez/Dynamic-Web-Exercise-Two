{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-Two-WeatherAPI\\\\Dynamic-Web-Exercise-Two\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-Two-WeatherAPI\\\\Dynamic-Web-Exercise-Two\\\\src\\\\containers\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WeatherIcon from '../../components/WeatherIcon/index.js';\nimport PageWrapper from '../../components/PageWrapper/index.js';\nconst apiKey = '3d2204265a388f489c0c0be84b54f0f8';\nexport default function Home(props) {\n  console.log('this is my prop:', props);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        isError = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorMessage = _useState4[0],\n        setErrorMessage = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        isSuccess = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        city = _useState8[0],\n        setCity = _useState8[1];\n\n  const _useState9 = useState({}),\n        _useState10 = _slicedToArray(_useState9, 2),\n        weather = _useState10[0],\n        setWeather = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        weatherType = _useState12[0],\n        setWeatherType = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        cloudy = _useState14[0],\n        setCloudy = _useState14[1];\n\n  function queryWeatherAPI(queryCity) {\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(queryCity, \"&APPID=\").concat(apiKey)).then(function (response) {\n      console.log('response', response);\n\n      if (response.status !== 200) {\n        isError(true);\n        setErrorMessage(\"\".concat(response.status, \": \", 'Error'));\n      } else {\n        isSuccess(true);\n      }\n\n      setWeather(response);\n      return response;\n    }).catch(function (error) {\n      console.log('error', error);\n      return error;\n    });\n  }\n  /*function apiCallback(response){\r\n    if(response.status !== 200){\r\n      isError(true);\r\n      setErrorMessage(`${response.status}: ${Error}`);\r\n    }\r\n    else{\r\n      isSuccess(true)\r\n    }\r\n    setWeather(response.data)\r\n  }\r\n  */\n\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.location.search);\n    console.log(urlParams);\n    const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\n    setCity(cityParam);\n    queryWeatherAPI(cityParam);\n  }, []);\n  console.log('weather', weather);\n  useEffect(() => {\n    let getWeatherType = weather.weather ? weather.weather[0].main : '';\n    let getCloudy = weather.clouds ? weather.clouds.all : 0;\n    setWeatherType(getWeatherType);\n    setCloudy(getCloudy);\n  }, [weatherType]);\n  var weatherDispType = weather.data ? weather.data.weather[0].main : '';\n  console.log('weatherDispType', weatherDispType);\n  return React.createElement(PageWrapper, {\n    cloudy: cloudy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"WeatherNav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'Seoul' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Seoul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Seoul\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'London' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=London\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"London\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'Miami' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Miami\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Miami\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city === 'Chicago' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Chicago\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Chicago\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \" Weather in: \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, city)), error && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, errorMessage), success && React.createElement(\"div\", {\n    className: \"successMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Weather query successful!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Weather Type: \", weather.data ? weather.data.weather[0].main : ''), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Current Temp: \", weather.data && weather.data.main.temp), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"High Temp: \", weather.data && weather.data.main.temp_max), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Low Temp: \", weather.data && weather.data.main.temp_min), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Cloudiness: \", weather.data && weather.data.clouds.all), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Humidity: \", weather.data && weather.data.main.humidity), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Wind Speed: \", weather.data && weather.data.wind.speed), React.createElement(WeatherIcon, {\n    weatherType: weatherDispType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:\\Users\\jessi\\Desktop\\exercise-Two-WeatherAPI\\Dynamic-Web-Exercise-Two\\src\\containers\\Home\\index.js"],"names":["React","useEffect","useState","axios","WeatherIcon","PageWrapper","apiKey","Home","props","console","log","error","isError","errorMessage","setErrorMessage","success","isSuccess","city","setCity","weather","setWeather","weatherType","setWeatherType","cloudy","setCloudy","queryWeatherAPI","queryCity","get","then","response","status","catch","urlParams","URLSearchParams","location","search","cityParam","getWeatherType","main","getCloudy","clouds","all","weatherDispType","data","temp","temp_max","temp_min","humidity","wind","speed"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport WeatherIcon from '../../components/WeatherIcon/index.js';\r\nimport PageWrapper from '../../components/PageWrapper/index.js';\r\n\r\nconst apiKey = '3d2204265a388f489c0c0be84b54f0f8';\r\n\r\nexport default function Home(props){\r\n  console.log('this is my prop:',props);\r\n  const [error,isError] = useState(false)\r\n  const[errorMessage, setErrorMessage] = useState('')\r\n  const [success, isSuccess] = useState(false)\r\n\r\n  const [city, setCity] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n  const [weatherType, setWeatherType] = useState(0);\r\n  const [cloudy,setCloudy] = useState('');\r\n\r\n  function queryWeatherAPI(queryCity){\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}`)\r\n    .then(function(response){\r\n      console.log('response', response);\r\n      if(response.status !== 200){\r\n        isError(true);\r\n        setErrorMessage(`${response.status}: ${'Error'}`);\r\n      }\r\n      else{\r\n        isSuccess(true)\r\n      }\r\n      setWeather(response);\r\n      return response;\r\n    })\r\n\r\n    .catch(function(error){\r\n      console.log('error', error);\r\n      return error;\r\n    });\r\n  }\r\n\r\n  /*function apiCallback(response){\r\n    if(response.status !== 200){\r\n      isError(true);\r\n      setErrorMessage(`${response.status}: ${Error}`);\r\n    }\r\n    else{\r\n      isSuccess(true)\r\n    }\r\n    setWeather(response.data)\r\n  }\r\n*/\r\n\r\nuseEffect(() => {\r\n  const urlParams = new URLSearchParams(props.location.search)\r\n  console.log(urlParams)\r\n  const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\r\n  setCity(cityParam);\r\n  queryWeatherAPI(cityParam);\r\n},[]);\r\n\r\n  console.log('weather', weather);\r\n\r\n  useEffect(() => {\r\n    let getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n    let getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n    setWeatherType(getWeatherType)\r\n    setCloudy(getCloudy)\r\n  }, [weatherType]);\r\n\r\n  var weatherDispType = weather.data ? weather.data.weather[0].main : '';\r\n\r\n  console.log('weatherDispType', weatherDispType)\r\n\r\n  return(\r\n    <PageWrapper cloudy = {cloudy}>\r\n    <div className = \"App\">\r\n      <div className=\"WeatherNav\">\r\n        <a className={`WeatherNav__Item ${city === 'Seoul' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Seoul\">Seoul</a>\r\n        <a className={`WeatherNav__Item ${city === 'London' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=London\">London</a>\r\n        <a className={`WeatherNav__Item ${city === 'Miami' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Miami\">Miami</a>\r\n        <a className={`WeatherNav__Item ${city === 'Chicago' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Chicago\">Chicago</a>\r\n      </div>\r\n\r\n      <h1> Weather in: <span>{city}</span></h1>\r\n\r\n      {error && <div className = \"errorMessage\">{errorMessage}</div>}\r\n      {success && <div className = \"successMessage\">Weather query successful!</div>}\r\n\r\n      <p>Weather Type: {weather.data ? weather.data.weather[0].main : ''}</p>\r\n      <p>Current Temp: {weather.data && weather.data.main.temp}</p>\r\n      <p>High Temp: {weather.data && weather.data.main.temp_max}</p>\r\n      <p>Low Temp: {weather.data && weather.data.main.temp_min}</p>\r\n      <p>Cloudiness: {weather.data && weather.data.clouds.all}</p>\r\n      <p>Humidity: {weather.data && weather.data.main.humidity}</p>\r\n      <p>Wind Speed: {weather.data && weather.data.wind.speed}</p>\r\n\r\n      <WeatherIcon weatherType={weatherDispType}/>\r\n    </div>\r\n    </PageWrapper>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
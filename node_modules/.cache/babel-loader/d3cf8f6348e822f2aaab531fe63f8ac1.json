{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-Two-WeatherAPI\\\\Dynamic-Web-Exercise-Two\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-Two-WeatherAPI\\\\Dynamic-Web-Exercise-Two\\\\src\\\\containers\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport PageWrapper from '../../components/PageWrapper/index.js';\nimport WeatherIcon from '../../components/WeatherIcon/index.js';\nconst apiKey = '3d2204265a388f489c0c0be84b54f0f8';\nexport default function Home(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        isError = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorMessage = _useState4[0],\n        setErrorMessage = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        isSuccess = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        city = _useState8[0],\n        setCity = _useState8[1];\n\n  const _useState9 = useState({}),\n        _useState10 = _slicedToArray(_useState9, 2),\n        weather = _useState10[0],\n        setWeather = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        weatherType = _useState12[0],\n        setWeatherType = _useState12[1];\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        cloudy = _useState14[0],\n        setCloudy = _useState14[1];\n\n  function queryWeatherAPI(queryCity) {\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(queryCity, \"&APPID=\").concat(apiKey)).then(function (response) {\n      console.log('response', response);\n      setWeather(response);\n      return response;\n    }).catch(function (error) {\n      console.log('error', error);\n      return error;\n    });\n  }\n\n  function apiCallback(response) {\n    if (response.status !== 200) {\n      isError(true);\n      setErrorMessage(\"\".concat(response.status, \": \").concat(Error));\n    } else {\n      isSuccess(true);\n    }\n\n    setWeather(response.data);\n  }\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.location.search);\n    const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\n    setCity(cityParam);\n    queryWeatherAPI(cityParam);\n  }, []);\n  console.log('weather', weather);\n  useEffect(() => {\n    let getWeatherType = weather.weather ? weather.weather[0].main : '';\n    let getCloudy = weather.clouds ? weather.clouds.all : 0;\n    setWeatherType(getWeatherType);\n    setCloudy(getCloudy);\n  }, [weather]);\n  var weatherDisp = weather.data ? weather.data.weather[0].main : '';\n  console.log('icon', weatherDisp);\n  return React.createElement(PageWrapper, {\n    cloudy: cloudy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"WeatherNav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city == 'Seoul' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Seoul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Seoul\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city == 'London' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=London\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"London\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city == 'Miami' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Miami\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Miami\"), React.createElement(\"a\", {\n    className: \"WeatherNav__Item \".concat(city == 'Chicago' ? 'WeatherNav__Item--active' : ''),\n    href: \"/?city=Chicago\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Chicago\")), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \" Weather in: \", React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, city)), error && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, errorMessage), success && React.createElement(\"div\", {\n    className: \"successMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Weather query successful!\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Weather Type: \", weather.data ? weather.data.weather[0].main : ''), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Current Temp: \", weather.data && weather.data.main.temp), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"High Temp: \", weather.data && weather.data.main.temp_max), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Low Temp: \", weather.data && weather.data.main.temp_min), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Cloudiness: \", weather.data && weather.data.clouds.all), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Humidity: \", weather.data && weather.data.main.humidity), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Wind Speed: \", weather.data && weather.data.wind.speed), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(FontAwesomeIcon, {\n    icon: weatherDisp,\n    size: \"6x\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })));\n}\n/*\r\nswitch (weatherDisp){\r\n  case (weather.data ? weather.data.weather[0].main : '') == 'Clear':\r\n    weatherDisp = \"cloud-showers-heavy\";\r\n    break;\r\n  case (weather.data ? weather.data.weather[0].main : '') == 'Rain':\r\n    weatherDisp = \"cloud-showers-heavy\";\r\n    break;\r\n  case (weather.data ? weather.data.weather[0].main : '') == 'Clouds':\r\n    weatherDisp = \"cloudy\";\r\n    break;\r\n  default:\r\n    console.log('Sorry, we are missing the icon for ' + weatherDisp + '.');\r\n}\r\n\r\n*/\n\n/*<WeatherIcon weatherValue={weatherType}/>*/\n\n/*\r\nuseEffect(() => {\r\n  let getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n  let getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n  setWeatherType(getWeatherType)\r\n  setCloudy(getCloudy)\r\n}, [weather]);\r\n*/\n\n/*\r\nuseEffect(() => {\r\n  const weatherType = weather.data ? weather.data.weather[0].main : '';\r\n  const cloudy = weather.clouds ? weather.clouds.all : 0;\r\n  setWeatherType(weatherType)\r\n  setCloudy(cloudy)\r\n}, [weather]);\r\n*/\n//<p>{weatherType}</p>\n\n/*\r\nuseEffect(() => {\r\n  let getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n  let getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n  setWeatherType(getWeatherType)\r\n  setCloudy(getCloudy)\r\n}, [weather]);\r\n*/\n\n/*\r\nuseEffect(() => {\r\n  const getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n  const getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n  setWeatherType(getWeatherType)\r\n  setCloudy(getCloudy)\r\n}, [weather]);\r\n*/\n\n/*<p>Weather Type: {weatherType}</p>*/\n\n/*import PageWrapper from '../../components/PageWrapper'*/\n\n/*import WeatherIcon from '../../../components/PageWrapper/index.js';\r\n*/","map":{"version":3,"sources":["C:\\Users\\jessi\\Desktop\\exercise-Two-WeatherAPI\\Dynamic-Web-Exercise-Two\\src\\containers\\Home\\index.js"],"names":["React","useEffect","useState","axios","PageWrapper","WeatherIcon","apiKey","Home","props","error","isError","errorMessage","setErrorMessage","success","isSuccess","city","setCity","weather","setWeather","weatherType","setWeatherType","cloudy","setCloudy","queryWeatherAPI","queryCity","get","then","response","console","log","catch","apiCallback","status","Error","data","urlParams","URLSearchParams","location","search","cityParam","getWeatherType","main","getCloudy","clouds","all","weatherDisp","temp","temp_max","temp_min","humidity","wind","speed"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport PageWrapper from '../../components/PageWrapper/index.js';\r\nimport WeatherIcon from '../../components/WeatherIcon/index.js';\r\n\r\nconst apiKey = '3d2204265a388f489c0c0be84b54f0f8';\r\n\r\nexport default function Home(props){\r\n  const [error,isError] = useState(false)\r\n  const[errorMessage, setErrorMessage] = useState('')\r\n  const [success, isSuccess] = useState(false)\r\n\r\n  const [city, setCity] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n  const [weatherType, setWeatherType] = useState(0);\r\n  const [cloudy,setCloudy] = useState(0);\r\n\r\n  function queryWeatherAPI(queryCity){\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}`)\r\n    .then(function(response){\r\n      console.log('response', response);\r\n      setWeather(response);\r\n      return response;\r\n    })\r\n\r\n    .catch(function(error){\r\n      console.log('error', error);\r\n      return error;\r\n    });\r\n  }\r\n\r\n  function apiCallback(response){\r\n    if(response.status !== 200){\r\n      isError(true);\r\n      setErrorMessage(`${response.status}: ${Error}`);\r\n    }\r\n    else{\r\n      isSuccess(true)\r\n    }\r\n    setWeather(response.data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(props.location.search)\r\n    const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\r\n    setCity(cityParam);\r\n    queryWeatherAPI(cityParam);\r\n  },[]);\r\n\r\n  console.log('weather', weather);\r\n\r\n  useEffect(() => {\r\n    let getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n    let getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n    setWeatherType(getWeatherType)\r\n    setCloudy(getCloudy)\r\n  }, [weather]);\r\n\r\n  var weatherDisp = weather.data ? weather.data.weather[0].main : '';\r\n  console.log('icon',weatherDisp);\r\n  return(\r\n    <PageWrapper cloudy = {cloudy}>\r\n      <div className=\"WeatherNav\">\r\n        <a className={`WeatherNav__Item ${city =='Seoul' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Seoul\">Seoul</a>\r\n        <a className={`WeatherNav__Item ${city =='London' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=London\">London</a>\r\n        <a className={`WeatherNav__Item ${city =='Miami' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Miami\">Miami</a>\r\n        <a className={`WeatherNav__Item ${city =='Chicago' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Chicago\">Chicago</a>\r\n      </div>\r\n\r\n\r\n      <h1> Weather in: <span>{city}</span></h1>\r\n\r\n      {error && <div className = \"errorMessage\">{errorMessage}</div>}\r\n      {success && <div className = \"successMessage\">Weather query successful!</div>}\r\n\r\n      <p>Weather Type: {weather.data ? weather.data.weather[0].main : ''}</p>\r\n      <p>Current Temp: {weather.data && weather.data.main.temp}</p>\r\n      <p>High Temp: {weather.data && weather.data.main.temp_max}</p>\r\n      <p>Low Temp: {weather.data && weather.data.main.temp_min}</p>\r\n      <p>Cloudiness: {weather.data && weather.data.clouds.all}</p>\r\n      <p>Humidity: {weather.data && weather.data.main.humidity}</p>\r\n      <p>Wind Speed: {weather.data && weather.data.wind.speed}</p>\r\n      <div>\r\n        <FontAwesomeIcon icon = {weatherDisp} size=\"6x\"/>\r\n      </div>\r\n\r\n    </PageWrapper>\r\n  );\r\n}\r\n/*\r\nswitch (weatherDisp){\r\n  case (weather.data ? weather.data.weather[0].main : '') == 'Clear':\r\n    weatherDisp = \"cloud-showers-heavy\";\r\n    break;\r\n  case (weather.data ? weather.data.weather[0].main : '') == 'Rain':\r\n    weatherDisp = \"cloud-showers-heavy\";\r\n    break;\r\n  case (weather.data ? weather.data.weather[0].main : '') == 'Clouds':\r\n    weatherDisp = \"cloudy\";\r\n    break;\r\n  default:\r\n    console.log('Sorry, we are missing the icon for ' + weatherDisp + '.');\r\n}\r\n\r\n*/\r\n\r\n/*<WeatherIcon weatherValue={weatherType}/>*/\r\n\r\n/*\r\nuseEffect(() => {\r\n  let getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n  let getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n  setWeatherType(getWeatherType)\r\n  setCloudy(getCloudy)\r\n}, [weather]);\r\n*/\r\n\r\n\r\n/*\r\nuseEffect(() => {\r\n  const weatherType = weather.data ? weather.data.weather[0].main : '';\r\n  const cloudy = weather.clouds ? weather.clouds.all : 0;\r\n  setWeatherType(weatherType)\r\n  setCloudy(cloudy)\r\n}, [weather]);\r\n*/\r\n//<p>{weatherType}</p>\r\n\r\n/*\r\nuseEffect(() => {\r\n  let getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n  let getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n  setWeatherType(getWeatherType)\r\n  setCloudy(getCloudy)\r\n}, [weather]);\r\n*/\r\n\r\n\r\n/*\r\nuseEffect(() => {\r\n  const getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n  const getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n  setWeatherType(getWeatherType)\r\n  setCloudy(getCloudy)\r\n}, [weather]);\r\n*/\r\n\r\n/*<p>Weather Type: {weatherType}</p>*/\r\n\r\n\r\n/*import PageWrapper from '../../components/PageWrapper'*/\r\n/*import WeatherIcon from '../../../components/PageWrapper/index.js';\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}
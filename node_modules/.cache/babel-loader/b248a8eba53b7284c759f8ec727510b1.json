{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-Two-WeatherAPI\\\\Dynamic-Web-Exercise-Two\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-Two-WeatherAPI\\\\Dynamic-Web-Exercise-Two\\\\src\\\\containers\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport WeatherIcon from '../../components/WeatherIcon/index.js';\nimport PageWrapper from '../../components/PageWrapper/index.js';\nconst apiKey = '3d2204265a388f489c0c0be84b54f0f8';\nexport default function Home(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        isError = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorMessage = _useState4[0],\n        setErrorMessage = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        success = _useState6[0],\n        isSuccess = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        city = _useState8[0],\n        setCity = _useState8[1];\n\n  const _useState9 = useState({}),\n        _useState10 = _slicedToArray(_useState9, 2),\n        weather = _useState10[0],\n        setWeather = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        weatherType = _useState12[0],\n        setWeatherType = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        cloudy = _useState14[0],\n        setCloudy = _useState14[1];\n\n  function queryWeatherAPI(queryCity) {\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(queryCity, \"&APPID=\").concat(apiKey)).then(function (response) {\n      console.log('response', response);\n      setWeather(response);\n      return response;\n    }).catch(function (error) {\n      console.log('error', error);\n      return error;\n    });\n  }\n\n  function apiCallback(response) {\n    if (response.status !== 200) {\n      isError(true);\n      setErrorMessage(\"\".concat(response.status, \": \").concat(Error));\n    } else {\n      isSuccess(true);\n    }\n\n    setWeather(response.data);\n  }\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.location.search);\n    const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\n    setCity(cityParam);\n    queryWeatherAPI(cityParam);\n  }, []);\n  console.log('weather', weather);\n  useEffect(() => {\n    let getWeatherType = weather.weather ? weather.weather[0].main : '';\n    let getCloudy = weather.clouds ? weather.clouds.all : 0;\n    setWeatherType(getWeatherType);\n    setCloudy(getCloudy);\n  }, [weatherType]);\n  var weatherDispType = weather.data ? weather.data.weather[0].main : '';\n  console.log('weatherDispType', weatherDispType);\n  /*return(\r\n    <PageWrapper cloudy = {cloudy}>\r\n    <div className = \"App\">\r\n      <div className=\"WeatherNav\">\r\n        <a className={`WeatherNav__Item ${city === 'Seoul' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Seoul\">Seoul</a>\r\n        <a className={`WeatherNav__Item ${city === 'London' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=London\">London</a>\r\n        <a className={`WeatherNav__Item ${city === 'Miami' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Miami\">Miami</a>\r\n        <a className={`WeatherNav__Item ${city === 'Chicago' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Chicago\">Chicago</a>\r\n      </div>\r\n        <h1> Weather in: <span>{city}</span></h1>\r\n        {error && <div className = \"errorMessage\">{errorMessage}</div>}\r\n      {success && <div className = \"successMessage\">Weather query successful!</div>}\r\n        <p>Weather Type: {weather.data ? weather.data.weather[0].main : ''}</p>\r\n      <p>Current Temp: {weather.data && weather.data.main.temp}</p>\r\n      <p>High Temp: {weather.data && weather.data.main.temp_max}</p>\r\n      <p>Low Temp: {weather.data && weather.data.main.temp_min}</p>\r\n      <p>Cloudiness: {weather.data && weather.data.clouds.all}</p>\r\n      <p>Humidity: {weather.data && weather.data.main.humidity}</p>\r\n      <p>Wind Speed: {weather.data && weather.data.wind.speed}</p>\r\n        <WeatherIcon iconToDisplay={weatherDispType}/>\r\n    </div>\r\n    </PageWrapper>\r\n  );*/\n\n  return React.createElement(PageWrapper, {\n    clouds: clouds,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"WeatherNav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"WeatherItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"WeatherNav_Item \".concat(city === 'Seoul' ? 'WeatherNav_Item--active' : ''),\n    href: \"/?city=Seoul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Seoul\")), React.createElement(\"div\", {\n    className: \"WeatherItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"WeatherNav_Item \".concat(city === 'London' ? 'WeatherNav_Item--active' : ''),\n    href: \"/?city=London\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"London\")), React.createElement(\"div\", {\n    className: \"WeatherItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"WeatherNav_Item \".concat(city === 'Miami' ? 'WeatherNav_Item--active' : ''),\n    href: \"/?city=Miami\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Miami\")), React.createElement(\"div\", {\n    className: \"WeatherItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"WeatherNav_Item \".concat(city === 'Chicago' ? 'WeatherNav_Item--active' : ''),\n    href: \"/?city=Chicago\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Chicago\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"AppChild_info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(WeatherIcon, {\n    weatherType: weatherType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), error && React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, errorMessage), success && React.createElement(\"div\", {\n    className: \"successMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Weather Query Is Successful :) \"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Weather in \", city), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Weather type in \", city, \" is: \", weather.data ? weather.data.weather[0].description : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"The humidity in \", city, \" is: \", weather.data ? weather.data.main.humidity : ''), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"The current temperature in \", city, \" is: \", weather.data ? weather.data.main.temp : ''), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"The maximum temperature in \", city, \" is: \", weather.data && weather.data.main.temp_max), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"The minimum temperature in \", city, \" is: \", weather.data && weather.data.main.temp_min), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"The pressure in \", city, \" is: \", weather.data ? weather.data.main.pressure : ''))));\n}\n/*var weatherDisp = weather.data ? weather.data.weather[0].main : '';*/\n//console.log('icon',weatherDisp);","map":{"version":3,"sources":["C:\\Users\\jessi\\Desktop\\exercise-Two-WeatherAPI\\Dynamic-Web-Exercise-Two\\src\\containers\\Home\\index.js"],"names":["React","useEffect","useState","axios","WeatherIcon","PageWrapper","apiKey","Home","props","error","isError","errorMessage","setErrorMessage","success","isSuccess","city","setCity","weather","setWeather","weatherType","setWeatherType","cloudy","setCloudy","queryWeatherAPI","queryCity","get","then","response","console","log","catch","apiCallback","status","Error","data","urlParams","URLSearchParams","location","search","cityParam","getWeatherType","main","getCloudy","clouds","all","weatherDispType","description","humidity","temp","temp_max","temp_min","pressure"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA,oBACTN,QAAQ,CAAC,KAAD,CADC;AAAA;AAAA,QAC1BO,KAD0B;AAAA,QACpBC,OADoB;;AAAA,qBAEMR,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAE3BS,YAF2B;AAAA,QAEbC,eAFa;;AAAA,qBAGJV,QAAQ,CAAC,KAAD,CAHJ;AAAA;AAAA,QAG1BW,OAH0B;AAAA,QAGjBC,SAHiB;;AAAA,qBAKTZ,QAAQ,CAAC,EAAD,CALC;AAAA;AAAA,QAK1Ba,IAL0B;AAAA,QAKpBC,OALoB;;AAAA,qBAMHd,QAAQ,CAAC,EAAD,CANL;AAAA;AAAA,QAM1Be,OAN0B;AAAA,QAMjBC,UANiB;;AAAA,sBAOKhB,QAAQ,CAAC,CAAD,CAPb;AAAA;AAAA,QAO1BiB,WAP0B;AAAA,QAObC,cAPa;;AAAA,sBAQNlB,QAAQ,CAAC,EAAD,CARF;AAAA;AAAA,QAQ1BmB,MAR0B;AAAA,QAQnBC,SARmB;;AAUjC,WAASC,eAAT,CAAyBC,SAAzB,EAAmC;AACjCrB,IAAAA,KAAK,CAACsB,GAAN,6DAA+DD,SAA/D,oBAAkFlB,MAAlF,GACCoB,IADD,CACM,UAASC,QAAT,EAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACAT,MAAAA,UAAU,CAACS,QAAD,CAAV;AACA,aAAOA,QAAP;AACD,KALD,EAOCG,KAPD,CAOO,UAASrB,KAAT,EAAe;AACpBmB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBpB,KAArB;AACA,aAAOA,KAAP;AACD,KAVD;AAWD;;AAED,WAASsB,WAAT,CAAqBJ,QAArB,EAA8B;AAC5B,QAAGA,QAAQ,CAACK,MAAT,KAAoB,GAAvB,EAA2B;AACzBtB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,eAAe,WAAIe,QAAQ,CAACK,MAAb,eAAwBC,KAAxB,EAAf;AACD,KAHD,MAII;AACFnB,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACDI,IAAAA,UAAU,CAACS,QAAQ,CAACO,IAAV,CAAV;AACD;;AAEDjC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkC,SAAS,GAAG,IAAIC,eAAJ,CAAoB5B,KAAK,CAAC6B,QAAN,CAAeC,MAAnC,CAAlB;AACA,UAAMC,SAAS,GAAGJ,SAAS,CAACV,GAAV,CAAc,MAAd,IAAwBU,SAAS,CAACV,GAAV,CAAc,MAAd,CAAxB,GAAgD,QAAlE;AACAT,IAAAA,OAAO,CAACuB,SAAD,CAAP;AACAhB,IAAAA,eAAe,CAACgB,SAAD,CAAf;AACD,GALQ,EAKP,EALO,CAAT;AAOAX,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBZ,OAAvB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuC,cAAc,GAAGvB,OAAO,CAACA,OAAR,GAAkBA,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBwB,IAArC,GAA4C,EAAjE;AACA,QAAIC,SAAS,GAAGzB,OAAO,CAAC0B,MAAR,GAAiB1B,OAAO,CAAC0B,MAAR,CAAeC,GAAhC,GAAsC,CAAtD;AACAxB,IAAAA,cAAc,CAACoB,cAAD,CAAd;AACAlB,IAAAA,SAAS,CAACoB,SAAD,CAAT;AACD,GALQ,EAKN,CAACvB,WAAD,CALM,CAAT;AAOA,MAAI0B,eAAe,GAAG5B,OAAO,CAACiB,IAAR,GAAejB,OAAO,CAACiB,IAAR,CAAajB,OAAb,CAAqB,CAArB,EAAwBwB,IAAvC,GAA8C,EAApE;AAEAb,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BgB,eAA/B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SACA,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAIF,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,SAAS,4BAAqB5B,IAAI,KAAG,OAAP,GAAiB,yBAAjB,GAA4C,EAAjE,CAAZ;AAAkF,IAAA,IAAI,EAAC,cAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,4BAAqBA,IAAI,KAAG,QAAP,GAAkB,yBAAlB,GAA6C,EAAlE,CAAb;AAAoF,IAAA,IAAI,EAAC,eAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAJF,EAOE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,4BAAqBA,IAAI,KAAG,OAAP,GAAiB,yBAAjB,GAA4C,EAAjE,CAAb;AAAoF,IAAA,IAAI,EAAC,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CAPF,EAUE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,SAAS,4BAAqBA,IAAI,KAAG,SAAP,GAAmB,yBAAnB,GAA8C,EAAnE,CAAb;AAAsF,IAAA,IAAI,EAAC,gBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CAVF,CADA,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAiBE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,WAAW,EAAEI,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGV,KAAK,IAAI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BE,YAA/B,CAFZ,EAGGE,OAAO,IAAI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAHd,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBE,IAAhB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBA,IAApB,WAA+BE,OAAO,CAACiB,IAAR,GAAejB,OAAO,CAACiB,IAAR,CAAajB,OAAb,CAAqB,CAArB,EAAwB6B,WAAvC,GAAoD,EAAnF,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoB/B,IAApB,WAA+BE,OAAO,CAACiB,IAAR,GAAejB,OAAO,CAACiB,IAAR,CAAaO,IAAb,CAAkBM,QAAjC,GAA2C,EAA1E,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA+BhC,IAA/B,WAA0CE,OAAO,CAACiB,IAAR,GAAejB,OAAO,CAACiB,IAAR,CAAaO,IAAb,CAAkBO,IAAjC,GAAuC,EAAjF,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA+BjC,IAA/B,WAA0CE,OAAO,CAACiB,IAAR,IAAgBjB,OAAO,CAACiB,IAAR,CAAaO,IAAb,CAAkBQ,QAA5E,CARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA+BlC,IAA/B,WAA0CE,OAAO,CAACiB,IAAR,IAAgBjB,OAAO,CAACiB,IAAR,CAAaO,IAAb,CAAkBS,QAA5E,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoBnC,IAApB,WAA+BE,OAAO,CAACiB,IAAR,GAAejB,OAAO,CAACiB,IAAR,CAAaO,IAAb,CAAkBU,QAAjC,GAA2C,EAA1E,CAVF,CAjBF,CADA,CADA;AAkCD;AACD;AACA","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport WeatherIcon from '../../components/WeatherIcon/index.js';\r\nimport PageWrapper from '../../components/PageWrapper/index.js';\r\n\r\nconst apiKey = '3d2204265a388f489c0c0be84b54f0f8';\r\n\r\nexport default function Home(props){\r\n  const [error,isError] = useState(false)\r\n  const[errorMessage, setErrorMessage] = useState('')\r\n  const [success, isSuccess] = useState(false)\r\n\r\n  const [city, setCity] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n  const [weatherType, setWeatherType] = useState(0);\r\n  const [cloudy,setCloudy] = useState('');\r\n\r\n  function queryWeatherAPI(queryCity){\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}`)\r\n    .then(function(response){\r\n      console.log('response', response);\r\n      setWeather(response);\r\n      return response;\r\n    })\r\n\r\n    .catch(function(error){\r\n      console.log('error', error);\r\n      return error;\r\n    });\r\n  }\r\n\r\n  function apiCallback(response){\r\n    if(response.status !== 200){\r\n      isError(true);\r\n      setErrorMessage(`${response.status}: ${Error}`);\r\n    }\r\n    else{\r\n      isSuccess(true)\r\n    }\r\n    setWeather(response.data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(props.location.search)\r\n    const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\r\n    setCity(cityParam);\r\n    queryWeatherAPI(cityParam);\r\n  },[]);\r\n\r\n  console.log('weather', weather);\r\n\r\n  useEffect(() => {\r\n    let getWeatherType = weather.weather ? weather.weather[0].main : '';\r\n    let getCloudy = weather.clouds ? weather.clouds.all : 0;\r\n    setWeatherType(getWeatherType)\r\n    setCloudy(getCloudy)\r\n  }, [weatherType]);\r\n\r\n  var weatherDispType = weather.data ? weather.data.weather[0].main : '';\r\n\r\n  console.log('weatherDispType', weatherDispType)\r\n\r\n  /*return(\r\n    <PageWrapper cloudy = {cloudy}>\r\n    <div className = \"App\">\r\n      <div className=\"WeatherNav\">\r\n        <a className={`WeatherNav__Item ${city === 'Seoul' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Seoul\">Seoul</a>\r\n        <a className={`WeatherNav__Item ${city === 'London' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=London\">London</a>\r\n        <a className={`WeatherNav__Item ${city === 'Miami' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Miami\">Miami</a>\r\n        <a className={`WeatherNav__Item ${city === 'Chicago' ? 'WeatherNav__Item--active' : ''}`} href=\"/?city=Chicago\">Chicago</a>\r\n      </div>\r\n\r\n      <h1> Weather in: <span>{city}</span></h1>\r\n\r\n      {error && <div className = \"errorMessage\">{errorMessage}</div>}\r\n      {success && <div className = \"successMessage\">Weather query successful!</div>}\r\n\r\n      <p>Weather Type: {weather.data ? weather.data.weather[0].main : ''}</p>\r\n      <p>Current Temp: {weather.data && weather.data.main.temp}</p>\r\n      <p>High Temp: {weather.data && weather.data.main.temp_max}</p>\r\n      <p>Low Temp: {weather.data && weather.data.main.temp_min}</p>\r\n      <p>Cloudiness: {weather.data && weather.data.clouds.all}</p>\r\n      <p>Humidity: {weather.data && weather.data.main.humidity}</p>\r\n      <p>Wind Speed: {weather.data && weather.data.wind.speed}</p>\r\n\r\n      <WeatherIcon iconToDisplay={weatherDispType}/>\r\n    </div>\r\n    </PageWrapper>\r\n  );*/\r\n  return(\r\n  <PageWrapper clouds = {clouds}>\r\n  <div className=\"App\">\r\n  <div className=\"WeatherNav\">\r\n    <div className=\"WeatherItem\">\r\n    <a className={`WeatherNav_Item ${city==='Seoul' ? 'WeatherNav_Item--active': ''}`}href=\"/?city=Seoul\">Seoul</a>\r\n    </div>\r\n    <div className=\"WeatherItem\">\r\n    <a  className={`WeatherNav_Item ${city==='London' ? 'WeatherNav_Item--active': ''}`}href=\"/?city=London\">London</a>\r\n    </div>\r\n    <div className=\"WeatherItem\">\r\n    <a  className={`WeatherNav_Item ${city==='Miami' ? 'WeatherNav_Item--active': ''}`} href=\"/?city=Miami\">Miami</a>\r\n    </div>\r\n    <div className=\"WeatherItem\">\r\n    <a  className={`WeatherNav_Item ${city==='Chicago' ? 'WeatherNav_Item--active': ''}`} href=\"/?city=Chicago\">Chicago</a>\r\n    </div>\r\n  </div>\r\n    <div>\r\n    </div>\r\n    <div className=\"AppChild_info\">\r\n      <WeatherIcon weatherType={weatherType}/>\r\n      {error && <div className=\"errorMessage\">{errorMessage}</div>}\r\n      {success && <div className=\"successMessage\">Weather Query Is Successful :) </div>}\r\n      <h1>Weather in {city}</h1>\r\n      <p>Weather type in {city} is: {weather.data ? weather.data.weather[0].description: \"\"}</p>\r\n      <p>The humidity in {city} is: {weather.data ? weather.data.main.humidity: ''}</p>\r\n      <p>The current temperature in {city} is: {weather.data ? weather.data.main.temp: ''}</p>\r\n      <p>The maximum temperature in {city} is: {weather.data && weather.data.main.temp_max}</p>\r\n      <p>The minimum temperature in {city} is: {weather.data && weather.data.main.temp_min}</p>\r\n      <p>The pressure in {city} is: {weather.data ? weather.data.main.pressure: ''}</p>\r\n    </div>\r\n  </div>\r\n  </PageWrapper>\r\n);\r\n}\r\n/*var weatherDisp = weather.data ? weather.data.weather[0].main : '';*/\r\n//console.log('icon',weatherDisp);\r\n"]},"metadata":{},"sourceType":"module"}
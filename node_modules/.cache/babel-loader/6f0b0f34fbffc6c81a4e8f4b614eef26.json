{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-two\\\\exercise-two\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-two\\\\exercise-two\\\\src\\\\containers\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst apiKey = 'hjflahgkljkljlkj';\nexport default function Home(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weather = _useState4[0],\n        setWeather = _useState4[1];\n\n  function queryWeatherAPI(queryCity) {\n    axios.get('https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}').then(function (response) {\n      console.log('response', response);\n      setWeather(response);\n      return response;\n    }).catch(function (error) {\n      console.log('error', error);\n      return error;\n    });\n  }\n\n  useEffect(() => {\n    setCity('London');\n    queryWeatherAPI('London'); //setWeather({});\n\n    console.log('weather test', queryWeatherAPI('London'));\n  }, []);\n  console.log('weather', weather);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Weather in \", city), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Humidity: ??? \", weather.Main.Humidity));\n} //modify and shorten what response is, you only want response to be the data you are looking for","map":{"version":3,"sources":["C:\\Users\\jessi\\Desktop\\exercise-two\\exercise-two\\src\\containers\\Home\\index.js"],"names":["React","useEffect","useState","axios","apiKey","Home","props","city","setCity","weather","setWeather","queryWeatherAPI","queryCity","get","then","response","console","log","catch","error","Main","Humidity"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,kBAAf;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA,oBACTJ,QAAQ,CAAC,EAAD,CADC;AAAA;AAAA,QAC1BK,IAD0B;AAAA,QACpBC,OADoB;;AAAA,qBAEHN,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAE1BO,OAF0B;AAAA,QAEjBC,UAFiB;;AAIjC,WAASC,eAAT,CAAyBC,SAAzB,EAAmC;AACjCT,IAAAA,KAAK,CAACU,GAAN,CAAU,gFAAV,EACCC,IADD,CACM,UAASC,QAAT,EAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACAL,MAAAA,UAAU,CAACK,QAAD,CAAV;AACA,aAAOA,QAAP;AACD,KALD,EAOCG,KAPD,CAOO,UAASC,KAAT,EAAe;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACA,aAAOA,KAAP;AACD,KAVD;AAWD;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAAC,QAAD,CAAP;AACAG,IAAAA,eAAe,CAAC,QAAD,CAAf,CAFc,CAGd;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,eAAe,CAAC,QAAD,CAA3C;AACC,GALM,EAKJ,EALI,CAAT;AAOAK,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,OAAvB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBF,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBE,OAAO,CAACW,IAAR,CAAaC,QAA/B,CAFF,CADF;AAOD,C,CACD","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = 'hjflahgkljkljlkj';\r\n\r\nexport default function Home(props){\r\n  const [city, setCity] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  function queryWeatherAPI(queryCity){\r\n    axios.get('https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}')\r\n    .then(function(response){\r\n      console.log('response', response);\r\n      setWeather(response);\r\n      return response;\r\n    })\r\n\r\n    .catch(function(error){\r\n      console.log('error', error);\r\n      return error;\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setCity('London');\r\n    queryWeatherAPI('London');\r\n    //setWeather({});\r\n    console.log('weather test', queryWeatherAPI('London'));\r\n    }, []);\r\n\r\n  console.log('weather', weather);\r\n\r\n  return(\r\n    <div>\r\n      <h1>Weather in {city}</h1>\r\n      <p>Humidity: ??? {weather.Main.Humidity}</p>\r\n    </div>\r\n  )\r\n\r\n}\r\n//modify and shorten what response is, you only want response to be the data you are looking for\r\n"]},"metadata":{},"sourceType":"module"}
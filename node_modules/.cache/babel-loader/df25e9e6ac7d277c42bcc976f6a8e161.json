{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-two\\\\exercise-two\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jessi\\\\Desktop\\\\exercise-two\\\\exercise-two\\\\src\\\\containers\\\\Home\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nconst apiKey = '7d380f92edb71a3d8bdefb6c45ccf3c3';\nexport default function Home(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        city = _useState2[0],\n        setCity = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weather = _useState4[0],\n        setWeather = _useState4[1];\n\n  function queryWeatherAPI(queryCity) {\n    axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(queryCity, \"&APPID=\").concat(apiKey)).then(function (response) {\n      console.log('response', response);\n      setWeather(response);\n      return response;\n    }).catch(function (error) {\n      console.log('error', error);\n      return error;\n    });\n  }\n  /*\r\n  useEffect(() => {\r\n    setCity('London');\r\n    queryWeatherAPI('London');//cant be {city} bc it is not fully set yet in setCity\r\n    console.log('weather test', queryWeatherAPI('London'));\r\n    }, []);\r\n  */\n\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.location.search);\n    const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\n    setCity(cityParam);\n    const query = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(cityParam, \"&APPID=\").concat(apiKey); //  axios.get(query).then(response => apiCallback(response))\n  });\n  useEffect(() => {}, [weather]);\n  console.log('weather', weather);\n  return (\n    /*\r\n    <div>\r\n      <h1>Weather in {city}</h1>\r\n      <p>Humidity: {weather.data && weather.data.main.humidity}</p>\r\n    </div>\r\n    */\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/?city=Seoul\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Seoul\"))\n  );\n}","map":{"version":3,"sources":["C:\\Users\\jessi\\Desktop\\exercise-two\\exercise-two\\src\\containers\\Home\\index.js"],"names":["React","useEffect","useState","axios","apiKey","Home","props","city","setCity","weather","setWeather","queryWeatherAPI","queryCity","get","then","response","console","log","catch","error","urlParams","URLSearchParams","location","search","cityParam","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA,oBACTJ,QAAQ,CAAC,EAAD,CADC;AAAA;AAAA,QAC1BK,IAD0B;AAAA,QACpBC,OADoB;;AAAA,qBAEHN,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAE1BO,OAF0B;AAAA,QAEjBC,UAFiB;;AAIjC,WAASC,eAAT,CAAyBC,SAAzB,EAAmC;AACjCT,IAAAA,KAAK,CAACU,GAAN,6DAA+DD,SAA/D,oBAAkFR,MAAlF,GACCU,IADD,CACM,UAASC,QAAT,EAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;AACAL,MAAAA,UAAU,CAACK,QAAD,CAAV;AACA,aAAOA,QAAP;AACD,KALD,EAOCG,KAPD,CAOO,UAASC,KAAT,EAAe;AACpBH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,KAArB;AACA,aAAOA,KAAP;AACD,KAVD;AAWD;AAED;;;;;;;;;AAOFlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,SAAS,GAAG,IAAIC,eAAJ,CAAoBf,KAAK,CAACgB,QAAN,CAAeC,MAAnC,CAAlB;AACA,UAAMC,SAAS,GAAGJ,SAAS,CAACP,GAAV,CAAc,MAAd,IAAwBO,SAAS,CAACP,GAAV,CAAc,MAAd,CAAxB,GAAgD,QAAlE;AAEAL,IAAAA,OAAO,CAACgB,SAAD,CAAP;AAEA,UAAMC,KAAK,+DAAwDD,SAAxD,oBAA2EpB,MAA3E,CAAX,CANc,CAOhB;AACC,GARQ,CAAT;AAUAH,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,CAACQ,OAAD,CADM,CAAT;AAIEO,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,OAAvB;AAEA;AACE;;;;;;AAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF;AAPJ;AAWD","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = '7d380f92edb71a3d8bdefb6c45ccf3c3';\r\n\r\nexport default function Home(props){\r\n  const [city, setCity] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  function queryWeatherAPI(queryCity){\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${queryCity}&APPID=${apiKey}`)\r\n    .then(function(response){\r\n      console.log('response', response);\r\n      setWeather(response);\r\n      return response;\r\n    })\r\n\r\n    .catch(function(error){\r\n      console.log('error', error);\r\n      return error;\r\n    });\r\n  }\r\n\r\n  /*\r\n  useEffect(() => {\r\n    setCity('London');\r\n    queryWeatherAPI('London');//cant be {city} bc it is not fully set yet in setCity\r\n    console.log('weather test', queryWeatherAPI('London'));\r\n    }, []);\r\n*/\r\nuseEffect(() => {\r\n  const urlParams = new URLSearchParams(props.location.search)\r\n  const cityParam = urlParams.get('city') ? urlParams.get('city') : 'London';\r\n\r\n  setCity(cityParam);\r\n\r\n  const query = `https://api.openweathermap.org/data/2.5/weather?q=${cityParam}&APPID=${apiKey}`;\r\n//  axios.get(query).then(response => apiCallback(response))\r\n});\r\n\r\nuseEffect(() => {\r\n}, [weather])\r\n\r\n\r\n  console.log('weather', weather);\r\n\r\n  return(\r\n    /*\r\n    <div>\r\n      <h1>Weather in {city}</h1>\r\n      <p>Humidity: {weather.data && weather.data.main.humidity}</p>\r\n    </div>\r\n    */\r\n      <div>\r\n        <a href=\"/?city=Seoul\">Seoul</a>\r\n      </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}